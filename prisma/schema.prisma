generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id             String          @id @default(cuid())
  clerkId        String          @unique
  firstName      String?
  lastName       String?
  email          String?
  image          String?
  pseudo         String?         @unique
  votes          Vote[]
  memberships    UserCommunity[]
  createdAt      DateTime        @default(now())
  restaurants    Restaurant[]    @relation("UserRestaurants")
}

model Restaurant {
  id        String   @id @default(uuid())
  name      String
  city      String
  address   String?
  addedById String?
  addedBy   User?    @relation("UserRestaurants", fields: [addedById], references: [id])
  votes     Vote[]
  createdAt DateTime @default(now())
}

model Community {
  id          String          @id @default(cuid())
  name        String
  code        String          @unique
  description String?
  isPublic    Boolean         @default(true)
  votes       Vote[]
  members     UserCommunity[]
  createdAt   DateTime        @default(now())
}

model Vote {
  id           String     @id @default(cuid())
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  communityId  String
  community    Community  @relation(fields: [communityId], references: [id])
  createdAt    DateTime   @default(now())
  note         Float

  @@unique([userId, restaurantId, communityId])
}

model UserCommunity {
  id          String    @id @default(cuid())
  userId      String
  communityId String
  user        User      @relation(fields: [userId], references: [id])
  community   Community @relation(fields: [communityId], references: [id])
  joinedAt    DateTime  @default(now())

  @@unique([userId, communityId])
}
